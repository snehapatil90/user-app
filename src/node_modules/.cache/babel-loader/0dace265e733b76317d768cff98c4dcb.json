{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/user-app/src/Components/AddUser.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport moment from \"moment\";\nimport { nanoid } from \"nanoid\";\nimport { Button, Modal } from \"react-bootstrap\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { details } from \"../actions/userActions\";\nimport { useDispatch } from \"react-redux\";\nimport { useForm } from \"react-hook-form\";\nimport { ErrorMessage } from \"@hookform/error-message\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function AddUser(props) {\n  _s();\n\n  const {\n    register,\n    formState: {\n      errors\n    },\n    handleSubmit\n  } = useForm({\n    criteriaMode: \"all\"\n  });\n  console.log(\"props-----===>>>>>\", props);\n  const [showModalUpdate, setShowModalUpdate] = useState(false);\n  const [show, setShow] = useState(false);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [collegeList, setCollegeList] = useState([]);\n  const [name, setName] = useState(\"\");\n  const [address, setAddress] = useState(\"\");\n  const [startDate, setStartDate] = useState(new Date());\n  const [gender, setGender] = useState(\"\");\n  const [hobbies, setHobbies] = useState([]);\n  const [otherHobby, setOtherHobby] = useState(\"\");\n  const today = new Date();\n  const dispatch = useDispatch(); // const userDetails = useSelector((state) => state.userDetails);\n  // const { userDetailsV3 } = userDetails;\n  // submit form\n\n  const onSubmit = e => {\n    e.preventDefault();\n    console.log(\"hobbies-------------->>>>>>>>\", hobbies);\n    console.log(\"otherHobby-------------->>>>>>>>\", otherHobby);\n    hobbies.push(otherHobby); // console.log(\"userID ---> \", userId);\n\n    const userId = nanoid();\n    const userData = {\n      userId: userId,\n      name: name,\n      address: address,\n      birthDate: moment(startDate).format(\"YYYY-MM-DD\"),\n      gender: gender,\n      college: searchTerm,\n      hobbies: hobbies,\n      otherHobby: otherHobby\n    };\n    console.log(\"userData----->\", userData);\n    dispatch(details(userData));\n  }; // useEffect(() => {\n  //   if (userDetailsV2) {\n  //     props.history.push(\"/\");\n  //   }\n  // }, [props.history, userDetailsV2]);\n  // collect hobbies\n\n\n  const selectedHobbies = e => {\n    console.log(\"e------------hobby--->\", e);\n\n    if (!hobbies.includes(e)) {\n      hobbies.push(e);\n    } else {\n      const index = hobbies.indexOf(e);\n\n      if (index > -1) {\n        hobbies.splice(index, 1);\n      }\n    }\n\n    console.log(\"hobbies\", hobbies);\n    setHobbies(hobbies);\n  };\n\n  const selectedOtherHobby = e => {\n    setOtherHobby(e);\n  };\n\n  const getCollegeNames = async searchTerm => {\n    if (searchTerm && searchTerm.length > 1) {\n      const response = await axios.get(`http://universities.hipolabs.com/search?name=${searchTerm}`);\n      console.log(\"response\", response);\n      setCollegeList(response.data);\n    }\n  };\n\n  useEffect(() => {\n    getCollegeNames();\n  }, []);\n\n  const handleChange = e => {\n    console.log(\"e---->\", e.target.value);\n    setSearchTerm(e.target.value);\n    getCollegeNames(searchTerm);\n  };\n\n  const handleSelectedCollege = name => {\n    console.log(\"name\", name);\n    setSearchTerm(name);\n    setCollegeList([]);\n  }; // set date\n\n\n  const selectDateHandler = d => {\n    setStartDate(d);\n  };\n\n  const handleClickOther = () => {\n    setShow(true);\n  };\n\n  const handleUpdate = () => {\n    setShowModalUpdate(!showModalUpdate);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(Modal, {\n        show: true,\n        children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n          closeButton: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            className: \"form\",\n            onSubmit: handleSubmit(onSubmit),\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"name\",\n                children: \"Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...register(\"multipleErrorInput\", {\n                  required: \"This input is required.\",\n                  pattern: {\n                    value: /\\d+/,\n                    message: \"This input is number only.\"\n                  },\n                  minLength: {\n                    value: 11,\n                    message: \"This input must exceed 10 characters\"\n                  }\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"name\",\n                id: \"name\",\n                placeholder: \"Enter Name\",\n                required: true,\n                onChange: e => setName(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 156,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"birthdate\",\n                children: \"Birth Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n                dateFormat: \"yyyy/MM/dd\",\n                selected: startDate,\n                onChange: selectDateHandler,\n                todayButton: \"Today\",\n                maxDate: today,\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 166,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"address\",\n                children: \"Address\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"address\",\n                id: \"address\",\n                placeholder: \"Enter Address\",\n                required: true,\n                onChange: e => setAddress(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 177,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"gender\",\n                children: \"Gender\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 186,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                type: \"select\",\n                id: \"gender\",\n                placeholder: \"Enter Gender\",\n                required: true,\n                onChange: e => setGender(e.target.value),\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  hidden: true,\n                  children: \"-SELECT-\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 194,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"Male\",\n                  children: \"Male\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 197,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"Female\",\n                  children: \"Female\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 198,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 187,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"college\",\n                children: \"College\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 202,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                id: \"college\",\n                value: searchTerm,\n                placeholder: \"search min 3 characters\",\n                required: true,\n                onChange: handleChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 203,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                children: searchTerm.length > 0 && collegeList.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: collegeList.map((data, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n                    onClick: () => handleSelectedCollege(data.name),\n                    onKeyPress: e => {\n                      handleSelectedCollege(data.name);\n                    },\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: data.name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 224,\n                      columnNumber: 27\n                    }, this)\n                  }, i, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 217,\n                    columnNumber: 25\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 215,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 213,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"college\",\n                children: \"Hobbies\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 232,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"row\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"checkbox\",\n                    id: \"reading\",\n                    value: \"Reading\",\n                    name: \"reading\",\n                    onChange: e => selectedHobbies(e.target.value)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 235,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                    htmlFor: \"reading\",\n                    children: \"Reading\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 242,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 234,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"checkbox\",\n                    id: \"gaming\",\n                    value: \"Gaming\",\n                    name: \"gaming\",\n                    onChange: e => selectedHobbies(e.target.value)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 245,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                    htmlFor: \"gaming\",\n                    children: \"Gaming\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 252,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 244,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"checkbox\",\n                    id: \"travelling\",\n                    value: \"Travelling\",\n                    name: \"travelling\",\n                    onChange: e => selectedHobbies(e.target.value)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 255,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                    htmlFor: \"travelling\",\n                    children: \"Travelling\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 262,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 254,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"checkbox\",\n                    id: \"drawing\",\n                    value: \"Drawing\",\n                    name: \"drawing\",\n                    onChange: e => selectedHobbies(e.target.value)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 265,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                    htmlFor: \"drawing\",\n                    children: \"Drawing\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 272,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 264,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"checkbox\",\n                    id: \"others\",\n                    value: \"Others\",\n                    name: \"others\",\n                    onChange: e => selectedHobbies(e.target.value),\n                    onClick: handleClickOther\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 276,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                    htmlFor: \"others\",\n                    children: \"Others\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 284,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 275,\n                  columnNumber: 19\n                }, this), show && /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n                    placeholder: \"Enter your hobby here\" // value=\n                    ,\n                    onChange: e => selectedOtherHobby(e.target.value)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 288,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 287,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 233,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 298,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                className: \"primary\",\n                type: \"submit\",\n                children: [\" \", \"Submit\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 299,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 297,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n      errors: errors,\n      name: \"multipleErrorInput\",\n      render: ({\n        messages\n      }) => {\n        console.log(\"messages\", messages);\n        return messages ? Object.entries(messages).map(([type, message]) => /*#__PURE__*/_jsxDEV(\"p\", {\n          children: message\n        }, type, false, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 17\n        }, this)) : null;\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(AddUser, \"Fc90H2RUwitv+9E+16rSabCzcW0=\", false, function () {\n  return [useForm, useDispatch];\n});\n\n_c = AddUser;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddUser\");","map":{"version":3,"sources":["/home/user/Desktop/user-app/src/Components/AddUser.js"],"names":["React","useState","useEffect","axios","moment","nanoid","Button","Modal","DatePicker","details","useDispatch","useForm","ErrorMessage","AddUser","props","register","formState","errors","handleSubmit","criteriaMode","console","log","showModalUpdate","setShowModalUpdate","show","setShow","searchTerm","setSearchTerm","collegeList","setCollegeList","name","setName","address","setAddress","startDate","setStartDate","Date","gender","setGender","hobbies","setHobbies","otherHobby","setOtherHobby","today","dispatch","onSubmit","e","preventDefault","push","userId","userData","birthDate","format","college","selectedHobbies","includes","index","indexOf","splice","selectedOtherHobby","getCollegeNames","length","response","get","data","handleChange","target","value","handleSelectedCollege","selectDateHandler","d","handleClickOther","handleUpdate","required","pattern","message","minLength","map","i","messages","Object","entries","type"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,SAASC,MAAT,QAAuB,QAAvB;AACA,SAASC,MAAT,EAAiBC,KAAjB,QAA8B,iBAA9B;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,OAAO,4CAAP;AACA,SAASC,OAAT,QAAwB,wBAAxB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,SAASC,YAAT,QAA6B,yBAA7B;;;AAEA,eAAe,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AAAA;;AACrC,QAAM;AACJC,IAAAA,QADI;AAEJC,IAAAA,SAAS,EAAE;AAAEC,MAAAA;AAAF,KAFP;AAGJC,IAAAA;AAHI,MAIFP,OAAO,CAAC;AACVQ,IAAAA,YAAY,EAAE;AADJ,GAAD,CAJX;AAQAC,EAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCP,KAAlC;AAEA,QAAM,CAACQ,eAAD,EAAkBC,kBAAlB,IAAwCtB,QAAQ,CAAC,KAAD,CAAtD;AACA,QAAM,CAACuB,IAAD,EAAOC,OAAP,IAAkBxB,QAAQ,CAAC,KAAD,CAAhC;AACA,QAAM,CAACyB,UAAD,EAAaC,aAAb,IAA8B1B,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAAC2B,WAAD,EAAcC,cAAd,IAAgC5B,QAAQ,CAAC,EAAD,CAA9C;AAEA,QAAM,CAAC6B,IAAD,EAAOC,OAAP,IAAkB9B,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAAC+B,OAAD,EAAUC,UAAV,IAAwBhC,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACiC,SAAD,EAAYC,YAAZ,IAA4BlC,QAAQ,CAAC,IAAImC,IAAJ,EAAD,CAA1C;AACA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBrC,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACsC,OAAD,EAAUC,UAAV,IAAwBvC,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACwC,UAAD,EAAaC,aAAb,IAA8BzC,QAAQ,CAAC,EAAD,CAA5C;AAEA,QAAM0C,KAAK,GAAG,IAAIP,IAAJ,EAAd;AAEA,QAAMQ,QAAQ,GAAGlC,WAAW,EAA5B,CAzBqC,CA2BrC;AACA;AAEA;;AACA,QAAMmC,QAAQ,GAAIC,CAAD,IAAO;AACtBA,IAAAA,CAAC,CAACC,cAAF;AAEA3B,IAAAA,OAAO,CAACC,GAAR,CAAY,+BAAZ,EAA6CkB,OAA7C;AACAnB,IAAAA,OAAO,CAACC,GAAR,CAAY,kCAAZ,EAAgDoB,UAAhD;AACAF,IAAAA,OAAO,CAACS,IAAR,CAAaP,UAAb,EALsB,CAMtB;;AACA,UAAMQ,MAAM,GAAG5C,MAAM,EAArB;AACA,UAAM6C,QAAQ,GAAG;AACfD,MAAAA,MAAM,EAAEA,MADO;AAEfnB,MAAAA,IAAI,EAAEA,IAFS;AAGfE,MAAAA,OAAO,EAAEA,OAHM;AAIfmB,MAAAA,SAAS,EAAE/C,MAAM,CAAC8B,SAAD,CAAN,CAAkBkB,MAAlB,CAAyB,YAAzB,CAJI;AAKff,MAAAA,MAAM,EAAEA,MALO;AAMfgB,MAAAA,OAAO,EAAE3B,UANM;AAOfa,MAAAA,OAAO,EAAEA,OAPM;AAQfE,MAAAA,UAAU,EAAEA;AARG,KAAjB;AAWArB,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8B6B,QAA9B;AAEAN,IAAAA,QAAQ,CAACnC,OAAO,CAACyC,QAAD,CAAR,CAAR;AACD,GAtBD,CA/BqC,CAuDrC;AACA;AACA;AACA;AACA;AAEA;;;AACA,QAAMI,eAAe,GAAIR,CAAD,IAAO;AAC7B1B,IAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ,EAAsCyB,CAAtC;;AACA,QAAI,CAACP,OAAO,CAACgB,QAAR,CAAiBT,CAAjB,CAAL,EAA0B;AACxBP,MAAAA,OAAO,CAACS,IAAR,CAAaF,CAAb;AACD,KAFD,MAEO;AACL,YAAMU,KAAK,GAAGjB,OAAO,CAACkB,OAAR,CAAgBX,CAAhB,CAAd;;AACA,UAAIU,KAAK,GAAG,CAAC,CAAb,EAAgB;AACdjB,QAAAA,OAAO,CAACmB,MAAR,CAAeF,KAAf,EAAsB,CAAtB;AACD;AACF;;AAEDpC,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBkB,OAAvB;AACAC,IAAAA,UAAU,CAACD,OAAD,CAAV;AACD,GAbD;;AAeA,QAAMoB,kBAAkB,GAAIb,CAAD,IAAO;AAChCJ,IAAAA,aAAa,CAACI,CAAD,CAAb;AACD,GAFD;;AAIA,QAAMc,eAAe,GAAG,MAAOlC,UAAP,IAAsB;AAC5C,QAAIA,UAAU,IAAIA,UAAU,CAACmC,MAAX,GAAoB,CAAtC,EAAyC;AACvC,YAAMC,QAAQ,GAAG,MAAM3D,KAAK,CAAC4D,GAAN,CACpB,gDAA+CrC,UAAW,EADtC,CAAvB;AAIAN,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwByC,QAAxB;AACAjC,MAAAA,cAAc,CAACiC,QAAQ,CAACE,IAAV,CAAd;AACD;AACF,GATD;;AAWA9D,EAAAA,SAAS,CAAC,MAAM;AACd0D,IAAAA,eAAe;AAChB,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMK,YAAY,GAAInB,CAAD,IAAO;AAC1B1B,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsByB,CAAC,CAACoB,MAAF,CAASC,KAA/B;AACAxC,IAAAA,aAAa,CAACmB,CAAC,CAACoB,MAAF,CAASC,KAAV,CAAb;AACAP,IAAAA,eAAe,CAAClC,UAAD,CAAf;AACD,GAJD;;AAMA,QAAM0C,qBAAqB,GAAItC,IAAD,IAAU;AACtCV,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBS,IAApB;AACAH,IAAAA,aAAa,CAACG,IAAD,CAAb;AACAD,IAAAA,cAAc,CAAC,EAAD,CAAd;AACD,GAJD,CAtGqC,CA4GrC;;;AACA,QAAMwC,iBAAiB,GAAIC,CAAD,IAAO;AAC/BnC,IAAAA,YAAY,CAACmC,CAAD,CAAZ;AACD,GAFD;;AAIA,QAAMC,gBAAgB,GAAG,MAAM;AAC7B9C,IAAAA,OAAO,CAAC,IAAD,CAAP;AACD,GAFD;;AAGA,QAAM+C,YAAY,GAAG,MAAM;AACzBjD,IAAAA,kBAAkB,CAAC,CAACD,eAAF,CAAlB;AACD,GAFD;;AAIA,sBACE;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,6BACE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAE,IAAb;AAAA,gCACE,QAAC,KAAD,CAAO,MAAP;AAAc,UAAA,WAAW,EAAE;AAA3B;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,KAAD,CAAO,IAAP;AAAA,iCACE;AAAM,YAAA,SAAS,EAAC,MAAhB;AAAuB,YAAA,QAAQ,EAAEJ,YAAY,CAAC2B,QAAD,CAA7C;AAAA,oCACE;AAAA,sCACE;AAAO,gBAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE,sBACM9B,QAAQ,CAAC,oBAAD,EAAuB;AACjC0D,kBAAAA,QAAQ,EAAE,yBADuB;AAEjCC,kBAAAA,OAAO,EAAE;AACPP,oBAAAA,KAAK,EAAE,KADA;AAEPQ,oBAAAA,OAAO,EAAE;AAFF,mBAFwB;AAMjCC,kBAAAA,SAAS,EAAE;AACTT,oBAAAA,KAAK,EAAE,EADE;AAETQ,oBAAAA,OAAO,EAAE;AAFA;AANsB,iBAAvB;AADd;AAAA;AAAA;AAAA;AAAA,sBAFF,eAgBE;AACE,gBAAA,IAAI,EAAC,MADP;AAEE,gBAAA,EAAE,EAAC,MAFL;AAGE,gBAAA,WAAW,EAAC,YAHd;AAIE,gBAAA,QAAQ,MAJV;AAKE,gBAAA,QAAQ,EAAG7B,CAAD,IAAOf,OAAO,CAACe,CAAC,CAACoB,MAAF,CAASC,KAAV;AAL1B;AAAA;AAAA;AAAA;AAAA,sBAhBF;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAyBE;AAAA,sCACE;AAAO,gBAAA,OAAO,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE,QAAC,UAAD;AACE,gBAAA,UAAU,EAAC,YADb;AAEE,gBAAA,QAAQ,EAAEjC,SAFZ;AAGE,gBAAA,QAAQ,EAAEmC,iBAHZ;AAIE,gBAAA,WAAW,EAAE,OAJf;AAKE,gBAAA,OAAO,EAAE1B,KALX;AAME,gBAAA,QAAQ;AANV;AAAA;AAAA;AAAA;AAAA,sBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,oBAzBF,eAoCE;AAAA,sCACE;AAAO,gBAAA,OAAO,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE;AACE,gBAAA,IAAI,EAAC,SADP;AAEE,gBAAA,EAAE,EAAC,SAFL;AAGE,gBAAA,WAAW,EAAC,eAHd;AAIE,gBAAA,QAAQ,MAJV;AAKE,gBAAA,QAAQ,EAAGG,CAAD,IAAOb,UAAU,CAACa,CAAC,CAACoB,MAAF,CAASC,KAAV;AAL7B;AAAA;AAAA;AAAA;AAAA,sBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,oBApCF,eA8CE;AAAA,sCACE;AAAO,gBAAA,OAAO,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE;AACE,gBAAA,IAAI,EAAC,QADP;AAEE,gBAAA,EAAE,EAAC,QAFL;AAGE,gBAAA,WAAW,EAAC,cAHd;AAIE,gBAAA,QAAQ,MAJV;AAKE,gBAAA,QAAQ,EAAGrB,CAAD,IAAOR,SAAS,CAACQ,CAAC,CAACoB,MAAF,CAASC,KAAV,CAL5B;AAAA,wCAOE;AAAQ,kBAAA,KAAK,EAAC,EAAd;AAAiB,kBAAA,MAAM,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAPF,eAUE;AAAQ,kBAAA,KAAK,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAVF,eAWE;AAAQ,kBAAA,KAAK,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAXF;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,oBA9CF,eA8DE;AAAA,sCACE;AAAO,gBAAA,OAAO,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE;AACE,gBAAA,IAAI,EAAC,MADP;AAEE,gBAAA,EAAE,EAAC,SAFL;AAGE,gBAAA,KAAK,EAAEzC,UAHT;AAIE,gBAAA,WAAW,EAAC,yBAJd;AAKE,gBAAA,QAAQ,MALV;AAME,gBAAA,QAAQ,EAAEuC;AANZ;AAAA;AAAA;AAAA;AAAA,sBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,oBA9DF,eAyEE;AAAA,qCACE;AAAA,0BACGvC,UAAU,CAACmC,MAAX,GAAoB,CAApB,IAAyBjC,WAAW,CAACiC,MAAZ,GAAqB,CAA9C,iBACC;AAAA,4BACGjC,WAAW,CAACiD,GAAZ,CAAgB,CAACb,IAAD,EAAOc,CAAP,kBACf;AAEE,oBAAA,OAAO,EAAE,MAAMV,qBAAqB,CAACJ,IAAI,CAAClC,IAAN,CAFtC;AAGE,oBAAA,UAAU,EAAGgB,CAAD,IAAO;AACjBsB,sBAAAA,qBAAqB,CAACJ,IAAI,CAAClC,IAAN,CAArB;AACD,qBALH;AAAA,2CAOE;AAAA,gCAAMkC,IAAI,CAAClC;AAAX;AAAA;AAAA;AAAA;AAAA;AAPF,qBACOgD,CADP;AAAA;AAAA;AAAA;AAAA,0BADD;AADH;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBAzEF,eA4FE;AAAA,sCACE;AAAO,gBAAA,OAAO,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE;AAAK,gBAAA,SAAS,EAAC,KAAf;AAAA,wCACE;AAAA,0CACE;AACE,oBAAA,IAAI,EAAC,UADP;AAEE,oBAAA,EAAE,EAAC,SAFL;AAGE,oBAAA,KAAK,EAAC,SAHR;AAIE,oBAAA,IAAI,EAAC,SAJP;AAKE,oBAAA,QAAQ,EAAGhC,CAAD,IAAOQ,eAAe,CAACR,CAAC,CAACoB,MAAF,CAASC,KAAV;AALlC;AAAA;AAAA;AAAA;AAAA,0BADF,eAQE;AAAO,oBAAA,OAAO,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BARF;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAWE;AAAA,0CACE;AACE,oBAAA,IAAI,EAAC,UADP;AAEE,oBAAA,EAAE,EAAC,QAFL;AAGE,oBAAA,KAAK,EAAC,QAHR;AAIE,oBAAA,IAAI,EAAC,QAJP;AAKE,oBAAA,QAAQ,EAAGrB,CAAD,IAAOQ,eAAe,CAACR,CAAC,CAACoB,MAAF,CAASC,KAAV;AALlC;AAAA;AAAA;AAAA;AAAA,0BADF,eAQE;AAAO,oBAAA,OAAO,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BARF;AAAA;AAAA;AAAA;AAAA;AAAA,wBAXF,eAqBE;AAAA,0CACE;AACE,oBAAA,IAAI,EAAC,UADP;AAEE,oBAAA,EAAE,EAAC,YAFL;AAGE,oBAAA,KAAK,EAAC,YAHR;AAIE,oBAAA,IAAI,EAAC,YAJP;AAKE,oBAAA,QAAQ,EAAGrB,CAAD,IAAOQ,eAAe,CAACR,CAAC,CAACoB,MAAF,CAASC,KAAV;AALlC;AAAA;AAAA;AAAA;AAAA,0BADF,eAQE;AAAO,oBAAA,OAAO,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BARF;AAAA;AAAA;AAAA;AAAA;AAAA,wBArBF,eA+BE;AAAA,0CACE;AACE,oBAAA,IAAI,EAAC,UADP;AAEE,oBAAA,EAAE,EAAC,SAFL;AAGE,oBAAA,KAAK,EAAC,SAHR;AAIE,oBAAA,IAAI,EAAC,SAJP;AAKE,oBAAA,QAAQ,EAAGrB,CAAD,IAAOQ,eAAe,CAACR,CAAC,CAACoB,MAAF,CAASC,KAAV;AALlC;AAAA;AAAA;AAAA;AAAA,0BADF,eAQE;AAAO,oBAAA,OAAO,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BARF;AAAA;AAAA;AAAA;AAAA;AAAA,wBA/BF,eA0CE;AAAA,0CACE;AACE,oBAAA,IAAI,EAAC,UADP;AAEE,oBAAA,EAAE,EAAC,QAFL;AAGE,oBAAA,KAAK,EAAC,QAHR;AAIE,oBAAA,IAAI,EAAC,QAJP;AAKE,oBAAA,QAAQ,EAAGrB,CAAD,IAAOQ,eAAe,CAACR,CAAC,CAACoB,MAAF,CAASC,KAAV,CALlC;AAME,oBAAA,OAAO,EAAEI;AANX;AAAA;AAAA;AAAA;AAAA,0BADF,eASE;AAAO,oBAAA,OAAO,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BATF;AAAA;AAAA;AAAA;AAAA;AAAA,wBA1CF,EAqDG/C,IAAI,iBACH;AAAA,yCACE;AACE,oBAAA,WAAW,EAAC,uBADd,CAEE;AAFF;AAGE,oBAAA,QAAQ,EAAGsB,CAAD,IAAOa,kBAAkB,CAACb,CAAC,CAACoB,MAAF,CAASC,KAAV;AAHrC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,wBAtDJ;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,oBA5FF,eA8JE;AAAA,sCACE;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE,QAAC,MAAD;AAAQ,gBAAA,SAAS,EAAC,SAAlB;AAA4B,gBAAA,IAAI,EAAC,QAAjC;AAAA,2BACG,GADH;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,oBA9JF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eA8KE,QAAC,YAAD;AACE,MAAA,MAAM,EAAElD,MADV;AAEE,MAAA,IAAI,EAAC,oBAFP;AAGE,MAAA,MAAM,EAAE,CAAC;AAAE8D,QAAAA;AAAF,OAAD,KAAkB;AACxB3D,QAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwB0D,QAAxB;AACA,eAAOA,QAAQ,GACXC,MAAM,CAACC,OAAP,CAAeF,QAAf,EAAyBF,GAAzB,CAA6B,CAAC,CAACK,IAAD,EAAOP,OAAP,CAAD,kBAC3B;AAAA,oBAAeA;AAAf,WAAQO,IAAR;AAAA;AAAA;AAAA;AAAA,gBADF,CADW,GAIX,IAJJ;AAKD;AAVH;AAAA;AAAA;AAAA;AAAA,YA9KF;AAAA,kBADF;AA6LD;;GArTuBrE,O;UAKlBF,O,EAoBaD,W;;;KAzBKG,O","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport moment from \"moment\";\nimport { nanoid } from \"nanoid\";\nimport { Button, Modal } from \"react-bootstrap\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { details } from \"../actions/userActions\";\nimport { useDispatch } from \"react-redux\";\nimport { useForm } from \"react-hook-form\";\nimport { ErrorMessage } from \"@hookform/error-message\";\n\nexport default function AddUser(props) {\n  const {\n    register,\n    formState: { errors },\n    handleSubmit,\n  } = useForm({\n    criteriaMode: \"all\",\n  });\n\n  console.log(\"props-----===>>>>>\", props);\n\n  const [showModalUpdate, setShowModalUpdate] = useState(false);\n  const [show, setShow] = useState(false);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [collegeList, setCollegeList] = useState([]);\n\n  const [name, setName] = useState(\"\");\n  const [address, setAddress] = useState(\"\");\n  const [startDate, setStartDate] = useState(new Date());\n  const [gender, setGender] = useState(\"\");\n  const [hobbies, setHobbies] = useState([]);\n  const [otherHobby, setOtherHobby] = useState(\"\");\n\n  const today = new Date();\n\n  const dispatch = useDispatch();\n\n  // const userDetails = useSelector((state) => state.userDetails);\n  // const { userDetailsV3 } = userDetails;\n\n  // submit form\n  const onSubmit = (e) => {\n    e.preventDefault();\n\n    console.log(\"hobbies-------------->>>>>>>>\", hobbies);\n    console.log(\"otherHobby-------------->>>>>>>>\", otherHobby);\n    hobbies.push(otherHobby);\n    // console.log(\"userID ---> \", userId);\n    const userId = nanoid();\n    const userData = {\n      userId: userId,\n      name: name,\n      address: address,\n      birthDate: moment(startDate).format(\"YYYY-MM-DD\"),\n      gender: gender,\n      college: searchTerm,\n      hobbies: hobbies,\n      otherHobby: otherHobby,\n    };\n\n    console.log(\"userData----->\", userData);\n\n    dispatch(details(userData));\n  };\n\n  // useEffect(() => {\n  //   if (userDetailsV2) {\n  //     props.history.push(\"/\");\n  //   }\n  // }, [props.history, userDetailsV2]);\n\n  // collect hobbies\n  const selectedHobbies = (e) => {\n    console.log(\"e------------hobby--->\", e);\n    if (!hobbies.includes(e)) {\n      hobbies.push(e);\n    } else {\n      const index = hobbies.indexOf(e);\n      if (index > -1) {\n        hobbies.splice(index, 1);\n      }\n    }\n\n    console.log(\"hobbies\", hobbies);\n    setHobbies(hobbies);\n  };\n\n  const selectedOtherHobby = (e) => {\n    setOtherHobby(e);\n  };\n\n  const getCollegeNames = async (searchTerm) => {\n    if (searchTerm && searchTerm.length > 1) {\n      const response = await axios.get(\n        `http://universities.hipolabs.com/search?name=${searchTerm}`\n      );\n\n      console.log(\"response\", response);\n      setCollegeList(response.data);\n    }\n  };\n\n  useEffect(() => {\n    getCollegeNames();\n  }, []);\n\n  const handleChange = (e) => {\n    console.log(\"e---->\", e.target.value);\n    setSearchTerm(e.target.value);\n    getCollegeNames(searchTerm);\n  };\n\n  const handleSelectedCollege = (name) => {\n    console.log(\"name\", name);\n    setSearchTerm(name);\n    setCollegeList([]);\n  };\n\n  // set date\n  const selectDateHandler = (d) => {\n    setStartDate(d);\n  };\n\n  const handleClickOther = () => {\n    setShow(true);\n  };\n  const handleUpdate = () => {\n    setShowModalUpdate(!showModalUpdate);\n  };\n\n  return (\n    <>\n      <div className=\"row\">\n        <Modal show={true}>\n          <Modal.Header closeButton={true}></Modal.Header>\n          <Modal.Body>\n            <form className=\"form\" onSubmit={handleSubmit(onSubmit)}>\n              <div>\n                <label htmlFor=\"name\">Name</label>\n                <input\n                  {...register(\"multipleErrorInput\", {\n                    required: \"This input is required.\",\n                    pattern: {\n                      value: /\\d+/,\n                      message: \"This input is number only.\",\n                    },\n                    minLength: {\n                      value: 11,\n                      message: \"This input must exceed 10 characters\",\n                    },\n                  })}\n                />\n\n                <input\n                  type=\"name\"\n                  id=\"name\"\n                  placeholder=\"Enter Name\"\n                  required\n                  onChange={(e) => setName(e.target.value)}\n                />\n              </div>\n              <div>\n                <label htmlFor=\"birthdate\">Birth Date</label>\n                <DatePicker\n                  dateFormat=\"yyyy/MM/dd\"\n                  selected={startDate}\n                  onChange={selectDateHandler}\n                  todayButton={\"Today\"}\n                  maxDate={today}\n                  required\n                />\n              </div>\n              <div>\n                <label htmlFor=\"address\">Address</label>\n                <input\n                  type=\"address\"\n                  id=\"address\"\n                  placeholder=\"Enter Address\"\n                  required\n                  onChange={(e) => setAddress(e.target.value)}\n                />\n              </div>\n              <div>\n                <label htmlFor=\"gender\">Gender</label>\n                <select\n                  type=\"select\"\n                  id=\"gender\"\n                  placeholder=\"Enter Gender\"\n                  required\n                  onChange={(e) => setGender(e.target.value)}\n                >\n                  <option value=\"\" hidden>\n                    -SELECT-\n                  </option>\n                  <option value=\"Male\">Male</option>\n                  <option value=\"Female\">Female</option>\n                </select>\n              </div>\n              <div>\n                <label htmlFor=\"college\">College</label>\n                <input\n                  type=\"text\"\n                  id=\"college\"\n                  value={searchTerm}\n                  placeholder=\"search min 3 characters\"\n                  required\n                  onChange={handleChange}\n                />\n              </div>\n              <div>\n                <div>\n                  {searchTerm.length > 0 && collegeList.length > 0 && (\n                    <div>\n                      {collegeList.map((data, i) => (\n                        <div\n                          key={i}\n                          onClick={() => handleSelectedCollege(data.name)}\n                          onKeyPress={(e) => {\n                            handleSelectedCollege(data.name);\n                          }}\n                        >\n                          <div>{data.name}</div>\n                        </div>\n                      ))}\n                    </div>\n                  )}\n                </div>\n              </div>\n              <div>\n                <label htmlFor=\"college\">Hobbies</label>\n                <div className=\"row\">\n                  <div>\n                    <input\n                      type=\"checkbox\"\n                      id=\"reading\"\n                      value=\"Reading\"\n                      name=\"reading\"\n                      onChange={(e) => selectedHobbies(e.target.value)}\n                    />\n                    <label htmlFor=\"reading\">Reading</label>\n                  </div>\n                  <div>\n                    <input\n                      type=\"checkbox\"\n                      id=\"gaming\"\n                      value=\"Gaming\"\n                      name=\"gaming\"\n                      onChange={(e) => selectedHobbies(e.target.value)}\n                    />\n                    <label htmlFor=\"gaming\">Gaming</label>\n                  </div>\n                  <div>\n                    <input\n                      type=\"checkbox\"\n                      id=\"travelling\"\n                      value=\"Travelling\"\n                      name=\"travelling\"\n                      onChange={(e) => selectedHobbies(e.target.value)}\n                    />\n                    <label htmlFor=\"travelling\">Travelling</label>\n                  </div>\n                  <div>\n                    <input\n                      type=\"checkbox\"\n                      id=\"drawing\"\n                      value=\"Drawing\"\n                      name=\"drawing\"\n                      onChange={(e) => selectedHobbies(e.target.value)}\n                    />\n                    <label htmlFor=\"drawing\">Drawing</label>\n                  </div>\n\n                  <div>\n                    <input\n                      type=\"checkbox\"\n                      id=\"others\"\n                      value=\"Others\"\n                      name=\"others\"\n                      onChange={(e) => selectedHobbies(e.target.value)}\n                      onClick={handleClickOther}\n                    />\n                    <label htmlFor=\"others\">Others</label>\n                  </div>\n                  {show && (\n                    <div>\n                      <textarea\n                        placeholder=\"Enter your hobby here\"\n                        // value=\n                        onChange={(e) => selectedOtherHobby(e.target.value)}\n                      />\n                    </div>\n                  )}\n                </div>\n              </div>\n              <div>\n                <label />\n                <Button className=\"primary\" type=\"submit\">\n                  {\" \"}\n                  Submit\n                </Button>\n              </div>\n            </form>\n          </Modal.Body>\n        </Modal>\n      </div>\n      <ErrorMessage\n        errors={errors}\n        name=\"multipleErrorInput\"\n        render={({ messages }) => {\n          console.log(\"messages\", messages);\n          return messages\n            ? Object.entries(messages).map(([type, message]) => (\n                <p key={type}>{message}</p>\n              ))\n            : null;\n        }}\n      />\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}