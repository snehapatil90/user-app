{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/user-app/src/Components/AddUser.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, Fragment } from \"react\";\nimport axios from \"axios\";\nimport moment from \"moment\";\nimport { nanoid } from \"nanoid\";\nimport { Button, Modal } from \"react-bootstrap\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { details } from \"../actions/userActions\";\nimport { useDispatch } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function AddUser(props) {\n  _s();\n\n  console.log(\"props-----===>>>>>\", props);\n  const [showModalUpdate, setShowModalUpdate] = useState(false);\n  const [show, setShow] = useState(false);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [collegeList, setCollegeList] = useState([]);\n  const [name, setName] = useState(\"\");\n  const [address, setAddress] = useState(\"\");\n  const [startDate, setStartDate] = useState(new Date());\n  const [gender, setGender] = useState(\"\");\n  const [hobbies, setHobbies] = useState([]);\n  const [otherHobby, setOtherHobby] = useState(\"\");\n  const today = new Date();\n  const dispatch = useDispatch(); // const userDetails = useSelector((state) => state.userDetails);\n  // const { userDetailsV3 } = userDetails;\n  // submit form\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log(\"hobbies-------------->>>>>>>>\", hobbies);\n    console.log(\"otherHobby-------------->>>>>>>>\", otherHobby);\n    hobbies.push(otherHobby); // console.log(\"userID ---> \", userId);\n\n    const userId = nanoid();\n    const userData = {\n      userId: userId,\n      name: name,\n      address: address,\n      birthDate: moment(startDate).format(\"YYYY-MM-DD\"),\n      gender: gender,\n      college: searchTerm,\n      hobbies: hobbies,\n      otherHobby: otherHobby\n    };\n    console.log(\"userData----->\", userData);\n    dispatch(details(userData));\n  }; // useEffect(() => {\n  //   if (userDetailsV2) {\n  //     props.history.push(\"/\");\n  //   }\n  // }, [props.history, userDetailsV2]);\n  // collect hobbies\n\n\n  const selectedHobbies = e => {\n    console.log(\"e------------hobby--->\", e);\n\n    if (!hobbies.includes(e)) {\n      hobbies.push(e);\n    } else {\n      const index = hobbies.indexOf(e);\n\n      if (index > -1) {\n        hobbies.splice(index, 1);\n      }\n    }\n\n    console.log(\"hobbies\", hobbies);\n    setHobbies(hobbies);\n  };\n\n  const selectedOtherHobby = e => {\n    setOtherHobby(e);\n  };\n\n  const getCollegeNames = async searchTerm => {\n    if (searchTerm && searchTerm.length > 1) {\n      const response = await axios.get(`http://universities.hipolabs.com/search?name=${searchTerm}`);\n      console.log(\"response\", response);\n      setCollegeList(response.data);\n    }\n  };\n\n  useEffect(() => {\n    getCollegeNames();\n  }, []);\n\n  const handleChange = e => {\n    console.log(\"e---->\", e.target.value);\n    setSearchTerm(e.target.value);\n    getCollegeNames(searchTerm);\n  };\n\n  const handleSelectedCollege = name => {\n    console.log(\"name\", name);\n    setSearchTerm(name);\n    setCollegeList([]);\n  }; // set date\n\n\n  const selectDateHandler = d => {\n    setStartDate(d);\n  };\n\n  const handleClickOther = () => {\n    setShow(true);\n  };\n\n  const handleUpdate = () => {\n    setShowModalUpdate(!showModalUpdate);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(Modal, {\n        show: true,\n        children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n          closeButton: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n          children: /*#__PURE__*/_jsxDEV(Fragment, {\n            children: /*#__PURE__*/_jsxDEV(Formik, {\n              enableReinitialize: true,\n              validateOnBlur: false,\n              initialValues: initialValues,\n              validationSchema: yup.object().shape({\n                name: yup.string().required(\"Name is a required field\"),\n                address: yup.string().required(\"Address is a required field\"),\n                gender: yup.string().required(\"Gender is a required field\"),\n                college: yup.string().required(\"College is a required field\"),\n                startDate: yup.date().required(\"Birthdate is a required field\") // hobbies: yup\n                //   .string()\n                //   .required(\"Hobbies is a required field\"),\n\n              }),\n              onSubmit: this.handleSubmit,\n              children: props => {\n                const {\n                  isSubmitting,\n                  touched,\n                  values,\n                  errors,\n                  setFieldValue\n                } = props; // const { scheme } = this.state;\n\n                return /*#__PURE__*/_jsxDEV(Form, {\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      htmlFor: \"name\",\n                      children: \"Name\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 160,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(Field, {\n                      className: errors.name && touched.name ? \"form-control is-invalid\" : \"form-control\",\n                      name: \"name\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 161,\n                      columnNumber: 25\n                    }, this), touched.name && /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                      name: \"name\",\n                      children: msg => /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"err-message d-block\",\n                        children: msg\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 172,\n                        columnNumber: 31\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 170,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 159,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      htmlFor: \"address\",\n                      children: \"Address\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 178,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(Field, {\n                      className: errors.name && touched.name ? \"form-control is-invalid\" : \"form-control\",\n                      name: \"address\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 179,\n                      columnNumber: 25\n                    }, this), touched.address && /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                      name: \"address\",\n                      children: msg => /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"err-message d-block\",\n                        children: msg\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 190,\n                        columnNumber: 31\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 188,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 177,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: /*#__PURE__*/_jsxDEV(Field, {\n                      name: \"gender\",\n                      component: \"select\",\n                      value: values.gender,\n                      className: errors.name && touched.name ? \"form-control is-invalid\" : \"form-control\",\n                      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"\",\n                        hidden: true,\n                        children: \"-SELECT-\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 206,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"Male\",\n                        children: \"Male\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 209,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"Female\",\n                        children: \"Female\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 210,\n                        columnNumber: 27\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 196,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 195,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: /*#__PURE__*/_jsxDEV(Field, {\n                      className: errors.name && touched.name ? \"form-control is-invalid\" : \"form-control\",\n                      tabIndex: 0,\n                      type: \"search\",\n                      id: \"college\",\n                      name: \"searchTerm\",\n                      \"aria-label\": \"Search\",\n                      value: searchTerm,\n                      onClick: this.handleClick,\n                      placeholder: \"search min 3 characters\",\n                      onChange: handleChange\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 215,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 214,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"search-result-box\",\n                    children: searchTerm.length > 0 && collegeList.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: collegeList.map((data, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n                        onClick: () => handleSelectedCollege(data.name),\n                        onKeyPress: e => {\n                          handleSelectedCollege(data.name);\n                        },\n                        children: /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"search-result-title\",\n                          children: data.name\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 243,\n                          columnNumber: 33\n                        }, this)\n                      }, i, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 236,\n                        columnNumber: 31\n                      }, this))\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 234,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 232,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 158,\n                  columnNumber: 21\n                }, this);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(AddUser, \"8kgR0W+h3XcfYz/OQIBhnt2Q90k=\", false, function () {\n  return [useDispatch];\n});\n\n_c = AddUser;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddUser\");","map":{"version":3,"sources":["/home/user/Desktop/user-app/src/Components/AddUser.js"],"names":["React","useState","useEffect","Fragment","axios","moment","nanoid","Button","Modal","DatePicker","details","useDispatch","AddUser","props","console","log","showModalUpdate","setShowModalUpdate","show","setShow","searchTerm","setSearchTerm","collegeList","setCollegeList","name","setName","address","setAddress","startDate","setStartDate","Date","gender","setGender","hobbies","setHobbies","otherHobby","setOtherHobby","today","dispatch","handleSubmit","e","preventDefault","push","userId","userData","birthDate","format","college","selectedHobbies","includes","index","indexOf","splice","selectedOtherHobby","getCollegeNames","length","response","get","data","handleChange","target","value","handleSelectedCollege","selectDateHandler","d","handleClickOther","handleUpdate","initialValues","yup","object","shape","string","required","date","isSubmitting","touched","values","errors","setFieldValue","msg","handleClick","map","i"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, Fragment } from \"react\";\nimport axios from \"axios\";\nimport moment from \"moment\";\nimport { nanoid } from \"nanoid\";\nimport { Button, Modal } from \"react-bootstrap\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { details } from \"../actions/userActions\";\nimport { useDispatch } from \"react-redux\";\n\nexport default function AddUser(props) {\n  console.log(\"props-----===>>>>>\", props);\n\n  const [showModalUpdate, setShowModalUpdate] = useState(false);\n  const [show, setShow] = useState(false);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [collegeList, setCollegeList] = useState([]);\n\n  const [name, setName] = useState(\"\");\n  const [address, setAddress] = useState(\"\");\n  const [startDate, setStartDate] = useState(new Date());\n  const [gender, setGender] = useState(\"\");\n  const [hobbies, setHobbies] = useState([]);\n  const [otherHobby, setOtherHobby] = useState(\"\");\n\n  const today = new Date();\n\n  const dispatch = useDispatch();\n\n  // const userDetails = useSelector((state) => state.userDetails);\n  // const { userDetailsV3 } = userDetails;\n\n  // submit form\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    console.log(\"hobbies-------------->>>>>>>>\", hobbies);\n    console.log(\"otherHobby-------------->>>>>>>>\", otherHobby);\n    hobbies.push(otherHobby);\n    // console.log(\"userID ---> \", userId);\n    const userId = nanoid();\n    const userData = {\n      userId: userId,\n      name: name,\n      address: address,\n      birthDate: moment(startDate).format(\"YYYY-MM-DD\"),\n      gender: gender,\n      college: searchTerm,\n      hobbies: hobbies,\n      otherHobby: otherHobby,\n    };\n\n    console.log(\"userData----->\", userData);\n\n    dispatch(details(userData));\n  };\n\n  // useEffect(() => {\n  //   if (userDetailsV2) {\n  //     props.history.push(\"/\");\n  //   }\n  // }, [props.history, userDetailsV2]);\n\n  // collect hobbies\n  const selectedHobbies = (e) => {\n    console.log(\"e------------hobby--->\", e);\n    if (!hobbies.includes(e)) {\n      hobbies.push(e);\n    } else {\n      const index = hobbies.indexOf(e);\n      if (index > -1) {\n        hobbies.splice(index, 1);\n      }\n    }\n\n    console.log(\"hobbies\", hobbies);\n    setHobbies(hobbies);\n  };\n\n  const selectedOtherHobby = (e) => {\n    setOtherHobby(e);\n  };\n\n  const getCollegeNames = async (searchTerm) => {\n    if (searchTerm && searchTerm.length > 1) {\n      const response = await axios.get(\n        `http://universities.hipolabs.com/search?name=${searchTerm}`\n      );\n\n      console.log(\"response\", response);\n      setCollegeList(response.data);\n    }\n  };\n\n  useEffect(() => {\n    getCollegeNames();\n  }, []);\n\n  const handleChange = (e) => {\n    console.log(\"e---->\", e.target.value);\n    setSearchTerm(e.target.value);\n    getCollegeNames(searchTerm);\n  };\n\n  const handleSelectedCollege = (name) => {\n    console.log(\"name\", name);\n    setSearchTerm(name);\n    setCollegeList([]);\n  };\n\n  // set date\n  const selectDateHandler = (d) => {\n    setStartDate(d);\n  };\n\n  const handleClickOther = () => {\n    setShow(true);\n  };\n  const handleUpdate = () => {\n    setShowModalUpdate(!showModalUpdate);\n  };\n\n  return (\n    <>\n      <div className=\"row\">\n        <Modal show={true}>\n          <Modal.Header closeButton={true}></Modal.Header>\n          <Modal.Body>\n            <Fragment>\n              <Formik\n                enableReinitialize={true}\n                validateOnBlur={false}\n                initialValues={initialValues}\n                validationSchema={yup.object().shape({\n                  name: yup.string().required(\"Name is a required field\"),\n                  address: yup.string().required(\"Address is a required field\"),\n                  gender: yup.string().required(\"Gender is a required field\"),\n                  college: yup.string().required(\"College is a required field\"),\n                  startDate: yup\n                    .date()\n                    .required(\"Birthdate is a required field\"),\n                  // hobbies: yup\n                  //   .string()\n                  //   .required(\"Hobbies is a required field\"),\n                })}\n                onSubmit={this.handleSubmit}\n              >\n                {(props) => {\n                  const {\n                    isSubmitting,\n                    touched,\n                    values,\n                    errors,\n                    setFieldValue,\n                  } = props;\n                  // const { scheme } = this.state;\n                  return (\n                    <Form>\n                      <div>\n                        <label htmlFor=\"name\">Name</label>\n                        <Field\n                          className={\n                            errors.name && touched.name\n                              ? \"form-control is-invalid\"\n                              : \"form-control\"\n                          }\n                          name=\"name\"\n                        />\n                        {touched.name && (\n                          <ErrorMessage name=\"name\">\n                            {(msg) => (\n                              <div className=\"err-message d-block\">{msg}</div>\n                            )}\n                          </ErrorMessage>\n                        )}\n                      </div>\n                      <div>\n                        <label htmlFor=\"address\">Address</label>\n                        <Field\n                          className={\n                            errors.name && touched.name\n                              ? \"form-control is-invalid\"\n                              : \"form-control\"\n                          }\n                          name=\"address\"\n                        />\n                        {touched.address && (\n                          <ErrorMessage name=\"address\">\n                            {(msg) => (\n                              <div className=\"err-message d-block\">{msg}</div>\n                            )}\n                          </ErrorMessage>\n                        )}\n                      </div>\n                      <div>\n                        <Field\n                          name=\"gender\"\n                          component=\"select\"\n                          value={values.gender}\n                          className={\n                            errors.name && touched.name\n                              ? \"form-control is-invalid\"\n                              : \"form-control\"\n                          }\n                        >\n                          <option value=\"\" hidden>\n                            -SELECT-\n                          </option>\n                          <option value=\"Male\">Male</option>\n                          <option value=\"Female\">Female</option>\n                        </Field>\n                      </div>\n\n                      <div>\n                        <Field\n                          className={\n                            errors.name && touched.name\n                              ? \"form-control is-invalid\"\n                              : \"form-control\"\n                          }\n                          tabIndex={0}\n                          type=\"search\"\n                          id=\"college\"\n                          name=\"searchTerm\"\n                          aria-label=\"Search\"\n                          value={searchTerm}\n                          onClick={this.handleClick}\n                          placeholder=\"search min 3 characters\"\n                          onChange={handleChange}\n                        />\n                      </div>\n                      <div className=\"search-result-box\">\n                        {searchTerm.length > 0 && collegeList.length > 0 && (\n                          <div>\n                            {collegeList.map((data, i) => (\n                              <div\n                                key={i}\n                                onClick={() => handleSelectedCollege(data.name)}\n                                onKeyPress={(e) => {\n                                  handleSelectedCollege(data.name);\n                                }}\n                              >\n                                <div className=\"search-result-title\">\n                                  {data.name}\n                                </div>\n                              </div>\n                            ))}\n                          </div>\n                        )}\n                      </div>\n                    </Form>\n                  );\n                }}\n              </Formik>\n            </Fragment>\n            {/* <form className=\"form\" onSubmit={handleSubmit}>\n              <div>\n                <label htmlFor=\"name\">Name</label>\n                <input\n                  type=\"name\"\n                  id=\"name\"\n                  placeholder=\"Enter Name\"\n                  required\n                  onChange={(e) => setName(e.target.value)}\n                />\n              </div>\n              <div>\n                <label htmlFor=\"birthdate\">Birth Date</label>\n                <DatePicker\n                  dateFormat=\"yyyy/MM/dd\"\n                  selected={startDate}\n                  onChange={selectDateHandler}\n                  todayButton={\"Today\"}\n                  maxDate={today}\n                  required\n                />\n              </div>\n              <div>\n                <label htmlFor=\"address\">Address</label>\n                <input\n                  type=\"address\"\n                  id=\"address\"\n                  placeholder=\"Enter Address\"\n                  required\n                  onChange={(e) => setAddress(e.target.value)}\n                />\n              </div>\n              <div>\n                <label htmlFor=\"gender\">Gender</label>\n                <select\n                  type=\"select\"\n                  id=\"gender\"\n                  placeholder=\"Enter Gender\"\n                  required\n                  onChange={(e) => setGender(e.target.value)}\n                >\n                  <option value=\"\" hidden>\n                    -SELECT-\n                  </option>\n                  <option value=\"Male\">Male</option>\n                  <option value=\"Female\">Female</option>\n                </select>\n              </div>\n              <div>\n                <label htmlFor=\"college\">College</label>\n                <input\n                  type=\"text\"\n                  id=\"college\"\n                  value={searchTerm}\n                  placeholder=\"search min 3 characters\"\n                  required\n                  onChange={handleChange}\n                />\n              </div>\n              <div>\n                <div>\n                  {searchTerm.length > 0 && collegeList.length > 0 && (\n                    <div>\n                      {collegeList.map((data, i) => (\n                        <div\n                          key={i}\n                          onClick={() => handleSelectedCollege(data.name)}\n                          onKeyPress={(e) => {\n                            handleSelectedCollege(data.name);\n                          }}\n                        >\n                          <div>{data.name}</div>\n                        </div>\n                      ))}\n                    </div>\n                  )}\n                </div>\n              </div>\n              <div>\n                <label htmlFor=\"college\">Hobbies</label>\n                <div className=\"row\">\n                  <div>\n                    <input\n                      type=\"checkbox\"\n                      id=\"reading\"\n                      value=\"Reading\"\n                      name=\"reading\"\n                      onChange={(e) => selectedHobbies(e.target.value)}\n                    />\n                    <label htmlFor=\"reading\">Reading</label>\n                  </div>\n                  <div>\n                    <input\n                      type=\"checkbox\"\n                      id=\"gaming\"\n                      value=\"Gaming\"\n                      name=\"gaming\"\n                      onChange={(e) => selectedHobbies(e.target.value)}\n                    />\n                    <label htmlFor=\"gaming\">Gaming</label>\n                  </div>\n                  <div>\n                    <input\n                      type=\"checkbox\"\n                      id=\"travelling\"\n                      value=\"Travelling\"\n                      name=\"travelling\"\n                      onChange={(e) => selectedHobbies(e.target.value)}\n                    />\n                    <label htmlFor=\"travelling\">Travelling</label>\n                  </div>\n                  <div>\n                    <input\n                      type=\"checkbox\"\n                      id=\"drawing\"\n                      value=\"Drawing\"\n                      name=\"drawing\"\n                      onChange={(e) => selectedHobbies(e.target.value)}\n                    />\n                    <label htmlFor=\"drawing\">Drawing</label>\n                  </div>\n\n                  <div>\n                    <input\n                      type=\"checkbox\"\n                      id=\"others\"\n                      value=\"Others\"\n                      name=\"others\"\n                      onChange={(e) => selectedHobbies(e.target.value)}\n                      onClick={handleClickOther}\n                    />\n                    <label htmlFor=\"others\">Others</label>\n                  </div>\n                  {show && (\n                    <div>\n                      <textarea\n                        placeholder=\"Enter your hobby here\"\n                        // value=\n                        onChange={(e) => selectedOtherHobby(e.target.value)}\n                      />\n                    </div>\n                  )}\n                </div>\n              </div>\n              <div>\n                <label />\n                <Button className=\"primary\" type=\"submit\">\n                  {\" \"}\n                  Submit\n                </Button>\n              </div>\n            </form> */}\n          </Modal.Body>\n        </Modal>\n      </div>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}