{"ast":null,"code":"import { USER_DETAILS_FAIL, USER_DETAILS_REQUEST, USER_DETAILS_SUCCESS, USER_DETAILS_UPDATE_FAIL, USER_DETAILS_UPDATE_REQUEST, USER_DETAILS_UPDATE_SUCCESS, USER_REMOVE } from \"../constants/userConstants\";\nexport const details = userData => async dispatch => {\n  dispatch({\n    type: USER_DETAILS_REQUEST,\n    payload: userData\n  });\n\n  try {\n    dispatch({\n      type: USER_DETAILS_SUCCESS,\n      payload: userData\n    }); // const userObj = {};\n    // userObj[userData[\"userId\"]] = userData;\n    // console.log(\"userObj ----> \", userObj);\n    // localStorage.removeItem(\"userDetailsV3\");\n\n    let existingUsersData = JSON.parse(localStorage.getItem(\"userDetailsV3\")) || [];\n    console.log(\"existingUsersData ---> \", existingUsersData);\n    existingUsersData.push(userData);\n    console.log(\"updatedObject ---> \", existingUsersData);\n    localStorage.setItem(\"userDetailsV3\", JSON.stringify(existingUsersData));\n  } catch (error) {\n    dispatch({\n      type: USER_DETAILS_FAIL,\n      payload: {}\n    });\n  }\n};\nexport const update = userData => async dispatch => {\n  dispatch({\n    type: USER_DETAILS_UPDATE_REQUEST,\n    payload: userData\n  }); // const {\n  //   userDetails: { userDetailsV2 },\n  // } = getState();\n\n  try {\n    dispatch({\n      type: USER_DETAILS_UPDATE_SUCCESS,\n      payload: userData\n    });\n    let newExistingData = [];\n    let existingUsersData = JSON.parse(localStorage.getItem(\"userDetailsV3\")) || [];\n    console.log(\"existingUsersData ---> \", existingUsersData);\n    existingUsersData.map(data => {\n      if (data.userId !== userData.userId) {\n        console.log(\"data inside if\", data);\n        newExistingData.push(data);\n      }\n    });\n    newExistingData.push(userData);\n    localStorage.setItem(\"userDetailsV3\", JSON.stringify(newExistingData));\n  } catch (error) {\n    const message = \"error while updating\";\n    dispatch({\n      type: USER_DETAILS_UPDATE_FAIL,\n      payload: message\n    });\n  }\n}; // export const deleteUserId = (userId) => async (dispatch) => {\n//   dispatch({ type: USER_DETAILS_DELETE_REQUEST, payload: userId });\n//   // const {\n//   //   userDetails: { userDetailsV2 },\n//   // } = getState();\n//   try {\n//     dispatch({ type: USER_DETAILS_DELETE_SUCCESS, payload: userId });\n//     let newExistingData = [];\n//     let existingUsersData =\n//       JSON.parse(localStorage.getItem(\"userDetailsV3\")) || [];\n//     console.log(\"existingUsersData ---> \", existingUsersData);\n//     existingUsersData.map((data) => {\n//       if (data.userId !== userId) {\n//         console.log(\"data inside if\", data);\n//         newExistingData.push(data);\n//       }\n//     });\n//     // newExistingData.push(userData);\n//     localStorage.setItem(\"userDetailsV3\", JSON.stringify(newExistingData));\n//   } catch (error) {\n//     const message = \"error while updating\";\n//     dispatch({ type: USER_DETAILS_DELETE_FAIL, payload: message });\n//   }\n// };\n\nexport const removeUser = userId => (dispatch, getState) => {\n  dispatch({\n    type: USER_REMOVE,\n    payload: userId\n  });\n  localStorage.setItem(\"userDetailsV3\", JSON.stringify(getState().userDetails.userDetailsV3));\n};","map":{"version":3,"sources":["/home/user/Desktop/user-app/src/actions/userActions.js"],"names":["USER_DETAILS_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_UPDATE_FAIL","USER_DETAILS_UPDATE_REQUEST","USER_DETAILS_UPDATE_SUCCESS","USER_REMOVE","details","userData","dispatch","type","payload","existingUsersData","JSON","parse","localStorage","getItem","console","log","push","setItem","stringify","error","update","newExistingData","map","data","userId","message","removeUser","getState","userDetails","userDetailsV3"],"mappings":"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","sourcesContent":["import {\n  USER_DETAILS_FAIL,\n  USER_DETAILS_REQUEST,\n  USER_DETAILS_SUCCESS,\n  USER_DETAILS_UPDATE_FAIL,\n  USER_DETAILS_UPDATE_REQUEST,\n  USER_DETAILS_UPDATE_SUCCESS,\n  USER_REMOVE,\n} from \"../constants/userConstants\";\n\nexport const details = (userData) => async (dispatch) => {\n  dispatch({\n    type: USER_DETAILS_REQUEST,\n    payload: userData,\n  });\n  try {\n    dispatch({ type: USER_DETAILS_SUCCESS, payload: userData });\n\n    // const userObj = {};\n    // userObj[userData[\"userId\"]] = userData;\n    // console.log(\"userObj ----> \", userObj);\n\n    // localStorage.removeItem(\"userDetailsV3\");\n    let existingUsersData =\n      JSON.parse(localStorage.getItem(\"userDetailsV3\")) || [];\n    console.log(\"existingUsersData ---> \", existingUsersData);\n    existingUsersData.push(userData);\n    console.log(\"updatedObject ---> \", existingUsersData);\n    localStorage.setItem(\"userDetailsV3\", JSON.stringify(existingUsersData));\n  } catch (error) {\n    dispatch({\n      type: USER_DETAILS_FAIL,\n      payload: {},\n    });\n  }\n};\n\nexport const update = (userData) => async (dispatch) => {\n  dispatch({ type: USER_DETAILS_UPDATE_REQUEST, payload: userData });\n  // const {\n  //   userDetails: { userDetailsV2 },\n  // } = getState();\n  try {\n    dispatch({ type: USER_DETAILS_UPDATE_SUCCESS, payload: userData });\n    let newExistingData = [];\n    let existingUsersData =\n      JSON.parse(localStorage.getItem(\"userDetailsV3\")) || [];\n    console.log(\"existingUsersData ---> \", existingUsersData);\n    existingUsersData.map((data) => {\n      if (data.userId !== userData.userId) {\n        console.log(\"data inside if\", data);\n        newExistingData.push(data);\n      }\n    });\n    newExistingData.push(userData);\n    localStorage.setItem(\"userDetailsV3\", JSON.stringify(newExistingData));\n  } catch (error) {\n    const message = \"error while updating\";\n    dispatch({ type: USER_DETAILS_UPDATE_FAIL, payload: message });\n  }\n};\n\n// export const deleteUserId = (userId) => async (dispatch) => {\n//   dispatch({ type: USER_DETAILS_DELETE_REQUEST, payload: userId });\n//   // const {\n//   //   userDetails: { userDetailsV2 },\n//   // } = getState();\n//   try {\n//     dispatch({ type: USER_DETAILS_DELETE_SUCCESS, payload: userId });\n//     let newExistingData = [];\n//     let existingUsersData =\n//       JSON.parse(localStorage.getItem(\"userDetailsV3\")) || [];\n//     console.log(\"existingUsersData ---> \", existingUsersData);\n//     existingUsersData.map((data) => {\n//       if (data.userId !== userId) {\n//         console.log(\"data inside if\", data);\n//         newExistingData.push(data);\n//       }\n//     });\n//     // newExistingData.push(userData);\n//     localStorage.setItem(\"userDetailsV3\", JSON.stringify(newExistingData));\n//   } catch (error) {\n//     const message = \"error while updating\";\n//     dispatch({ type: USER_DETAILS_DELETE_FAIL, payload: message });\n//   }\n// };\n\nexport const removeUser = (userId) => (dispatch, getState) => {\n  dispatch({ type: USER_REMOVE, payload: userId });\n  localStorage.setItem(\n    \"userDetailsV3\",\n    JSON.stringify(getState().userDetails.userDetailsV3)\n  );\n};\n"]},"metadata":{},"sourceType":"module"}