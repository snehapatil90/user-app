{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/user-app/src/FormValidation/index.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"antd/dist/antd.css\";\nimport \"./index.css\";\nimport { Form, Input, Button, Select } from \"antd\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Option\n} = Select;\nconst layout = {\n  labelCol: {\n    span: 8\n  },\n  wrapperCol: {\n    span: 16\n  }\n};\nconst tailLayout = {\n  wrapperCol: {\n    offset: 8,\n    span: 16\n  }\n};\n\nconst AddUserForm = () => {\n  _s();\n\n  const [form] = Form.useForm();\n\n  const onGenderChange = value => {\n    switch (value) {\n      case \"male\":\n        form.setFieldsValue({\n          note: \"Hi, man!\"\n        });\n        return;\n\n      case \"female\":\n        form.setFieldsValue({\n          note: \"Hi, lady!\"\n        });\n        return;\n\n      case \"other\":\n        form.setFieldsValue({\n          note: \"Hi there!\"\n        });\n\n      default:\n        break;\n    }\n  };\n\n  const onFinish = values => {\n    console.log(values);\n  };\n\n  const onReset = () => {\n    form.resetFields();\n  };\n\n  const onFill = () => {\n    form.setFieldsValue({\n      note: \"Hello world!\",\n      gender: \"male\"\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Form, { ...layout,\n    form: form,\n    name: \"control-hooks\",\n    onFinish: onFinish,\n    children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n      name: \"name\",\n      label: \"Name\",\n      rules: [{\n        required: true\n      }],\n      children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      name: \"gender\",\n      label: \"Gender\",\n      rules: [{\n        required: true\n      }],\n      children: /*#__PURE__*/_jsxDEV(Select, {\n        placeholder: \"Select a option and change input text above\",\n        onChange: onGenderChange,\n        allowClear: true,\n        children: [/*#__PURE__*/_jsxDEV(Option, {\n          value: \"male\",\n          children: \"male\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Option, {\n          value: \"female\",\n          children: \"female\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      noStyle: true,\n      shouldUpdate: (prevValues, currentValues) => prevValues.gender !== currentValues.gender,\n      children: ({\n        getFieldValue\n      }) => getFieldValue(\"gender\") === \"other\" ? /*#__PURE__*/_jsxDEV(Form.Item, {\n        name: \"customizeGender\",\n        label: \"Customize Gender\",\n        rules: [{\n          required: true\n        }],\n        children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 13\n      }, this) : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, { ...tailLayout,\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        htmlType: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        htmlType: \"button\",\n        onClick: onReset,\n        children: \"Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"link\",\n        htmlType: \"button\",\n        onClick: onFill,\n        children: \"Fill form\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AddUserForm, \"rI7DrJIrFu7YmlGWYiMFTzs8jF0=\", false, function () {\n  return [Form.useForm];\n});\n\n_c = AddUserForm;\nexport default AddUserForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddUserForm\");","map":{"version":3,"sources":["/home/user/Desktop/user-app/src/FormValidation/index.js"],"names":["React","ReactDOM","Form","Input","Button","Select","Option","layout","labelCol","span","wrapperCol","tailLayout","offset","AddUserForm","form","useForm","onGenderChange","value","setFieldsValue","note","onFinish","values","console","log","onReset","resetFields","onFill","gender","required","prevValues","currentValues","getFieldValue"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"antd/dist/antd.css\";\nimport \"./index.css\";\nimport { Form, Input, Button, Select } from \"antd\";\nconst { Option } = Select;\nconst layout = {\n  labelCol: {\n    span: 8,\n  },\n  wrapperCol: {\n    span: 16,\n  },\n};\nconst tailLayout = {\n  wrapperCol: {\n    offset: 8,\n    span: 16,\n  },\n};\n\nconst AddUserForm = () => {\n  const [form] = Form.useForm();\n\n  const onGenderChange = (value) => {\n    switch (value) {\n      case \"male\":\n        form.setFieldsValue({\n          note: \"Hi, man!\",\n        });\n        return;\n\n      case \"female\":\n        form.setFieldsValue({\n          note: \"Hi, lady!\",\n        });\n        return;\n\n      case \"other\":\n        form.setFieldsValue({\n          note: \"Hi there!\",\n        });\n\n      default:\n        break;\n    }\n  };\n\n  const onFinish = (values) => {\n    console.log(values);\n  };\n\n  const onReset = () => {\n    form.resetFields();\n  };\n\n  const onFill = () => {\n    form.setFieldsValue({\n      note: \"Hello world!\",\n      gender: \"male\",\n    });\n  };\n\n  return (\n    <Form {...layout} form={form} name=\"control-hooks\" onFinish={onFinish}>\n      <Form.Item\n        name=\"name\"\n        label=\"Name\"\n        rules={[\n          {\n            required: true,\n          },\n        ]}\n      >\n        <Input />\n      </Form.Item>\n      <Form.Item\n        name=\"gender\"\n        label=\"Gender\"\n        rules={[\n          {\n            required: true,\n          },\n        ]}\n      >\n        <Select\n          placeholder=\"Select a option and change input text above\"\n          onChange={onGenderChange}\n          allowClear\n        >\n          <Option value=\"male\">male</Option>\n          <Option value=\"female\">female</Option>\n        </Select>\n      </Form.Item>\n      <Form.Item\n        noStyle\n        shouldUpdate={(prevValues, currentValues) =>\n          prevValues.gender !== currentValues.gender\n        }\n      >\n        {({ getFieldValue }) =>\n          getFieldValue(\"gender\") === \"other\" ? (\n            <Form.Item\n              name=\"customizeGender\"\n              label=\"Customize Gender\"\n              rules={[\n                {\n                  required: true,\n                },\n              ]}\n            >\n              <Input />\n            </Form.Item>\n          ) : null\n        }\n      </Form.Item>\n      <Form.Item {...tailLayout}>\n        <Button type=\"primary\" htmlType=\"submit\">\n          Submit\n        </Button>\n        <Button htmlType=\"button\" onClick={onReset}>\n          Reset\n        </Button>\n        <Button type=\"link\" htmlType=\"button\" onClick={onFill}>\n          Fill form\n        </Button>\n      </Form.Item>\n    </Form>\n  );\n};\n\nexport default AddUserForm;\n"]},"metadata":{},"sourceType":"module"}